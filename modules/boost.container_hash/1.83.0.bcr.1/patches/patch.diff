diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..6e847f9
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,14 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "container_hash",
+    # defines = ["BOOST_NO_CXX98_FUNCTION_BASE"], # TODO this shouldn"t be needed anymore - https://github.com/boostorg/container_hash/issues/22
+    deps = [
+        "@boost//:config",
+        "@boost//:describe",
+        "@boost//:mp11",
+        "@boost//:type_traits",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..a4b0fd3
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,14 @@
+"""
+Hey there! Before editing, check out the tool at https://github.com/dynacondev/boost.rules.tools
+Note: These modules follow a circular dependency structure on the boost module https://github.com/dynacondev/boost.rules to keep boost releases from mixing!
+"""
+
+module(
+    name = "boost.container_hash",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/test/BUILD.bazel b/test/BUILD.bazel
new file mode 100644
index 0000000..c067871
--- /dev/null
+++ b/test/BUILD.bazel
@@ -0,0 +1,99 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost//:container_hash",
+    "@boost//:core",
+    "@boost//:filesystem",
+    "@boost//:unordered",
+    "@boost//:utility",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        names = [
+            "check_float_funcs",
+            "described_class_test",
+            "extensions_hpp_test",
+            "hash_built_in_array_test",
+            "hash_complex_test",
+            "hash_container_test",
+            "hash_custom_test",
+            "hash_deque_test",
+            "hash_enum_test",
+            "hash_float_test",
+            "hash_forward_list_test",
+            "hash_friend_test",
+            "hash_fs_path_test",
+            "hash_function_pointer_test",
+            "hash_fwd_test_1",
+            "hash_fwd_test_2",
+            "hash_global_namespace_test",
+            "hash_info",
+            "hash_integral_test",
+            "hash_integral_test2",
+            "hash_is_avalanching_test",
+            "hash_is_avalanching_test2",
+            "hash_list_test",
+            "hash_long_double_test",
+            "hash_map_test",
+            "hash_multimap_test",
+            "hash_multiset_test",
+            "hash_no_ext_macro_1",
+            "hash_no_ext_macro_2",
+            "hash_nullptr_test",
+            "hash_number_test",
+            "hash_number_test2",
+            "hash_optional_test",
+            "hash_pointer_test",
+            "hash_range_test",
+            "hash_reference_values",
+            "hash_set_test",
+            "hash_std_array_test",
+            "hash_std_smart_ptr_test",
+            "hash_std_tuple_test",
+            "hash_string_test",
+            "hash_string_test2",
+            "hash_string_test3",
+            "hash_string_test4",
+            "hash_system_error_test",
+            "hash_tuple_like_test",
+            "hash_tuple_like_test2",
+            "hash_type_index_test",
+            "hash_unordered_map_test",
+            "hash_unordered_multimap_test",
+            "hash_unordered_multiset_test",
+            "hash_unordered_range_test",
+            "hash_unordered_set_test",
+            "hash_value_array_test",
+            "hash_variant_test",
+            "hash_vector_test",
+            "hash_vector_test2",
+            "implicit_test",
+            "is_contiguous_range_test",
+            "is_contiguous_range_test2",
+            "is_contiguous_range_test3",
+            "is_described_class_test",
+            "is_described_class_test2",
+            "is_described_class_test3",
+            "is_range_test",
+            "is_range_test2",
+            "is_range_test3",
+            "is_tuple_like_test",
+            "is_unordered_range_test",
+            "is_unordered_range_test2",
+            "link_ext_test",
+            "link_no_ext_test",
+            "link_test_2",
+            "link_test",
+            "quick",
+        ],
+        deps = DEPS,
+    ) + boost_test_set(
+        expect_fail = True,
+        names = [
+            "namespace_fail_test",
+        ],
+        deps = DEPS,
+    ),
+)
