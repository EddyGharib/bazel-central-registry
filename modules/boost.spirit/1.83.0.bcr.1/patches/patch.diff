diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..940ed00
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,38 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "spirit",
+    deps = [
+        "@boost//:array",
+        "@boost//:assert",
+        "@boost//:config",
+        "@boost//:core",
+        "@boost//:endian",
+        "@boost//:function",
+        "@boost//:function_types",
+        "@boost//:fusion",
+        "@boost//:integer",
+        "@boost//:io",
+        "@boost//:iterator",
+        "@boost//:move",
+        "@boost//:mpl",
+        "@boost//:optional",
+        "@boost//:phoenix",
+        "@boost//:pool",
+        "@boost//:preprocessor",
+        "@boost//:proto",
+        "@boost//:range",
+        "@boost//:regex",
+        "@boost//:smart_ptr",
+        "@boost//:static_assert",
+        "@boost//:thread",
+        "@boost//:throw_exception",
+        "@boost//:type_traits",
+        "@boost//:typeof",
+        "@boost//:unordered",
+        "@boost//:utility",
+        "@boost//:variant",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..dc2df37
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,14 @@
+"""
+Hey there! Before editing, check out the tool at https://github.com/dynacondev/boost.rules.tools
+Note: These modules follow a circular dependency structure on the boost module https://github.com/dynacondev/boost.rules to keep boost releases from mixing!
+"""
+
+module(
+    name = "boost.spirit",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..730a4b0
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost//:spirit",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "spirit_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/spirit_test.cc b/bazel_test/spirit_test.cc
new file mode 100644
index 0000000..2d271fe
--- /dev/null
+++ b/bazel_test/spirit_test.cc
@@ -0,0 +1,19 @@
+// Example is based on num_list1.cpp from the boost.spirit repo:
+// https://github.com/boostorg/spirit/blob/develop/example/x3/num_list/num_list1.cpp
+
+#include <boost/spirit/home/x3.hpp>
+#include <string>
+
+namespace x3 = boost::spirit::x3;
+
+int main()
+{
+    std::string csl("1,2,3,4");
+
+    auto first = csl.begin();
+    auto last = csl.end();
+
+    auto res = x3::phrase_parse(first, last, x3::double_ >> *(',' >> x3::double_), x3::ascii::space);
+
+    return res && (first == last) ? 0 : 1;
+}
\ No newline at end of file
