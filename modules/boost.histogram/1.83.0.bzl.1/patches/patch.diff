diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..9dbc39b
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,15 @@
+module(
+    name = "boost.histogram",
+    version = "1.83.0.bzl.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.config", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.math", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.mp11", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.serialization", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.variant2", version = "1.83.0.bzl.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/histogram_test.cc b/bazel_test/histogram_test.cc
new file mode 100644
index 0000000..4829fed
--- /dev/null
+++ b/bazel_test/histogram_test.cc
@@ -0,0 +1,32 @@
+// based off of the example provided at https://github.com/boostorg/histogram
+//
+#include <boost/histogram.hpp>
+#include <boost/format.hpp> // used here for printing
+#include <iostream>
+
+int main() {
+    using namespace boost::histogram;
+
+    // make 1d histogram with 4 regular bins from 0 to 2
+    auto h = make_histogram( axis::regular<>(4, 0.0, 2.0) );
+
+    // push some values into the histogram
+    for (auto&& value : { 0.4, 1.1, 0.3, 1.7, 10. })
+      h(value);
+
+    // iterate over bins
+    for (auto&& x : indexed(h)) {
+      std::cout << boost::format("bin %i [ %.1f, %.1f ): %i\n")
+        % x.index() % x.bin().lower() % x.bin().upper() % *x;
+    }
+
+    std::cout << std::flush;
+
+    /* program output:
+
+    bin 0 [ 0.0, 0.5 ): 2
+    bin 1 [ 0.5, 1.0 ): 0
+    bin 2 [ 1.0, 1.5 ): 1
+    bin 3 [ 1.5, 2.0 ): 1
+    */
+}
