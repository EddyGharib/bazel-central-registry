diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..584f7c5
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,97 @@
+load("@boost.rules.tools//:tools.bzl", "boost_library", "default_copts", "default_defines")
+
+BOOST_LOG_DEFINES = [
+    "BOOST_LOG_WITHOUT_WCHAR_T",
+    "BOOST_LOG_USE_STD_REGEX",
+    "BOOST_LOG_WITHOUT_DEBUG_OUTPUT",
+    "BOOST_LOG_WITHOUT_EVENT_LOG",
+    "BOOST_LOG_WITHOUT_SYSLOG",
+]
+
+BOOST_LOG_DEPS = [
+    "@boost.align",
+    "@boost.array",
+    "@boost.asio",
+    "@boost.assert",
+    "@boost.atomic",
+    "@boost.bind",
+    "@boost.config",
+    "@boost.core",
+    "@boost.date_time",
+    "@boost.detail",
+    "@boost.exception",
+    "@boost.filesystem",
+    "@boost.fusion",
+    "@boost.interprocess",
+    "@boost.intrusive",
+    "@boost.io",
+    "@boost.iterator",
+    "@boost.lexical_cast",
+    "@boost.move",
+    "@boost.mpl",
+    "@boost.optional",
+    "@boost.parameter",
+    "@boost.phoenix",
+    "@boost.predef",
+    "@boost.preprocessor",
+    "@boost.property_tree",
+    "@boost.proto",
+    "@boost.random",
+    "@boost.range",
+    "@boost.smart_ptr",
+    "@boost.spirit",
+    "@boost.static_assert",
+    "@boost.system",
+    "@boost.thread",
+    "@boost.throw_exception",
+    "@boost.type_index",
+    "@boost.type_traits",
+    "@boost.utility",
+    "@boost.variant",
+]
+
+cc_library(
+    name = "log_dump_ssse3",
+    srcs = ["src/dump_ssse3.cpp"] + glob(
+        ["include/boost/**"],
+    ),
+    copts = default_copts + [
+        "-msse4.2",
+    ],
+    defines = default_defines,
+    includes = [
+        "include",
+    ],
+    local_defines = BOOST_LOG_DEFINES,
+    deps = BOOST_LOG_DEPS,
+)
+
+boost_library(
+    name = "log",
+    srcs = glob([
+        "src/setup/*.hpp",
+        "src/setup/*.cpp",
+    ]),
+    copts = select({
+        "@platforms//cpu:x86_64": [
+            "-msse4.2",
+        ],
+        "//conditions:default": [
+        ],
+    }),
+    exclude_src = [
+        "src/dump_avx2.cpp",
+        "src/dump_ssse3.cpp",
+    ],
+    includes = [
+        "src",
+    ],
+    local_defines = BOOST_LOG_DEFINES,
+    deps = BOOST_LOG_DEPS + select({
+        "@platforms//cpu:x86_64": [
+            ":log_dump_ssse3",
+        ],
+        "//conditions:default": [
+        ],
+    }),
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..adb0d47
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,14 @@
+"""
+Hey there! Before editing, check out the tool at https://github.com/dynacondev/boost.rules.tools
+Note: These modules follow a circular dependency structure on the boost module https://github.com/dynacondev/boost.rules to keep boost releases from mixing!
+"""
+
+module(
+    name = "boost.log",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/test/BUILD.bazel b/test/BUILD.bazel
new file mode 100644
index 0000000..8bf79d5
--- /dev/null
+++ b/test/BUILD.bazel
@@ -0,0 +1,12 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        negative_test_names = [],
+        deps = DEPS,
+    ),
+)
