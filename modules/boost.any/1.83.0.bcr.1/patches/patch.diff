diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..df9e169
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,14 @@
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "any",
+    deps = [
+        "@boost.assert//:assert",
+        "@boost.config//:config",
+        "@boost.core//:core",
+        "@boost.static_assert//:static_assert",
+        "@boost.throw_exception//:throw_exception",
+        "@boost.type_index//:type_index",
+        "@boost.type_traits//:type_traits",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..0b8b82d
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,18 @@
+module(
+    name = "boost.any",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.assert", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.static_assert", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.type_index", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bcr.1")
+
+# Test Only
+bazel_dep(name = "boost.move", version = "1.83.0.bcr.1")
\ No newline at end of file
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..a5102e6
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.any//:any",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "any_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/any_test.cc b/bazel_test/any_test.cc
new file mode 100644
index 0000000..74619eb
--- /dev/null
+++ b/bazel_test/any_test.cc
@@ -0,0 +1,13 @@
+#include <boost/any.hpp>
+
+int main()
+{
+  boost::any a = 1;
+
+  if (boost::any_cast<int>(a) != 1)
+  {
+    return 1;
+  }
+
+  return 0;
+}
diff --git a/test/BUILD.bazel b/test/BUILD.bazel
new file mode 100644
index 0000000..923e0be
--- /dev/null
+++ b/test/BUILD.bazel
@@ -0,0 +1,192 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test")
+
+DEPS = [
+    "@boost.any//:any",
+    "@boost.move//:move",
+]
+
+test_suite(
+    name = "tests",
+    tests = [
+        ":any_cast_cv_failed",
+        ":any_from_basic_any",
+        ":any_from_basic_any_rv",
+        ":any_test",
+        ":any_test_cv_to_rv_failed",
+        ":any_test_mplif",
+        ":any_test_rv",
+        ":any_test_temporary_to_ref_failed",
+        ":any_to_basic_any",
+        ":any_to_basic_any_rv",
+        ":basic_any_cast_cv_failed",
+        ":basic_any_from_any",
+        ":basic_any_from_any_rv",
+        ":basic_any_from_basic_any",
+        ":basic_any_from_basic_any_rv",
+        ":basic_any_test",
+        ":basic_any_test_alignment_power_of_two_failed",
+        ":basic_any_test_cv_to_rv_failed",
+        ":basic_any_test_large_object",
+        ":basic_any_test_mplif",
+        ":basic_any_test_multiply_size_failed",
+        ":basic_any_test_rv",
+        ":basic_any_test_size_alignment_zero_failed",
+        ":basic_any_test_size_less_alignment_failed",
+        ":basic_any_test_small_object",
+        ":basic_any_test_temporary_to_ref_failed",
+        ":basic_any_to_any",
+        ":basic_any_to_any_rv",
+        ":basic_any_to_basic_any",
+        ":basic_any_to_basic_any_rv",
+    ],
+)
+
+boost_test(
+    name = "any_cast_cv_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_from_basic_any",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_from_basic_any_rv",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_test",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_test_cv_to_rv_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_test_mplif",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_test_rv",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_test_temporary_to_ref_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_to_basic_any",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "any_to_basic_any_rv",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_cast_cv_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_from_any",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_from_any_rv",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_from_basic_any",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_from_basic_any_rv",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_alignment_power_of_two_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_cv_to_rv_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_large_object",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_mplif",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_multiply_size_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_rv",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_size_alignment_zero_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_size_less_alignment_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_small_object",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_test_temporary_to_ref_failed",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_to_any",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_to_any_rv",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_to_basic_any",
+    deps = DEPS,
+)
+
+boost_test(
+    name = "basic_any_to_basic_any_rv",
+    deps = DEPS,
+)
