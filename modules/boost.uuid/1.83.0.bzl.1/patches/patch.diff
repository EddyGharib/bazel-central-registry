diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..0e8f19b
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,21 @@
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "uuid",
+    deps = [
+        "@boost.assert//:assert",
+        "@boost.config//:config",
+        "@boost.container_hash//:container_hash",
+        "@boost.core//:core",
+        "@boost.io//:io",
+        "@boost.move//:move",
+        "@boost.numeric.conversion//:conversion",
+        "@boost.predef//:predef",
+        "@boost.random//:random",
+        "@boost.static_assert//:static_assert",
+        "@boost.throw_exception//:throw_exception",
+        "@boost.tti//:tti",
+        "@boost.type_traits//:type_traits",
+        "@boost.winapi//:winapi",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..4fbfefe
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,22 @@
+module(
+    name = "boost.uuid",
+    version = "1.83.0.bzl.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.assert", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.container_hash", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.io", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.move", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.numeric.conversion", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.predef", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.random", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.static_assert", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.tti", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.winapi", version = "1.83.0.bzl.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..1186480
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,17 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.uuid//:uuid",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "uuid_nil_generator_test",
+            "uuid_random_generator_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/uuid_nil_generator_test.cc b/bazel_test/uuid_nil_generator_test.cc
new file mode 100644
index 0000000..c1dbf84
--- /dev/null
+++ b/bazel_test/uuid_nil_generator_test.cc
@@ -0,0 +1,9 @@
+#include <boost/uuid/uuid.hpp>
+#include <boost/uuid/uuid_generators.hpp>
+
+int main()
+{
+  boost::uuids::nil_generator gen;
+  boost::uuids::uuid u = gen();
+  return u.is_nil() ? 0 : 1;
+}   
diff --git a/bazel_test/uuid_random_generator_test.cc b/bazel_test/uuid_random_generator_test.cc
new file mode 100644
index 0000000..64c9fd4
--- /dev/null
+++ b/bazel_test/uuid_random_generator_test.cc
@@ -0,0 +1,9 @@
+#include <boost/uuid/uuid.hpp>
+#include <boost/uuid/uuid_generators.hpp>
+
+int main()
+{
+  boost::uuids::random_generator gen;
+  boost::uuids::uuid u = gen();
+  return u.size() > 0 ? 0 : 1;
+}   
