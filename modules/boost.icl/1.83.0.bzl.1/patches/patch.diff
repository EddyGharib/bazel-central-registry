diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..e47ce00
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,22 @@
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "icl",
+    deps = [
+        "@boost.assert//:assert",
+        "@boost.concept_check//:concept_check",
+        "@boost.config//:config",
+        "@boost.container//:container",
+        "@boost.core//:core",
+        "@boost.date_time//:date_time",
+        "@boost.detail//:detail",
+        "@boost.iterator//:iterator",
+        "@boost.move//:move",
+        "@boost.mpl//:mpl",
+        "@boost.range//:range",
+        "@boost.rational//:rational",
+        "@boost.static_assert//:static_assert",
+        "@boost.type_traits//:type_traits",
+        "@boost.utility//:utility",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..434c63f
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,23 @@
+module(
+    name = "boost.icl",
+    version = "1.83.0.bzl.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.assert", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.concept_check", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.container", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.date_time", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.detail", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.iterator", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.move", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.mpl", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.range", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.rational", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.static_assert", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.utility", version = "1.83.0.bzl.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..d433692
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.icl//:icl",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "icl_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/icl_test.cc b/bazel_test/icl_test.cc
new file mode 100644
index 0000000..259d4ba
--- /dev/null
+++ b/bazel_test/icl_test.cc
@@ -0,0 +1,30 @@
+#include <boost/icl/interval_set.hpp>
+#include <boost/icl/interval.hpp>
+
+#include <cassert>
+
+int main()
+{
+
+  const unsigned int DOMAIN_MAX = 100;
+
+  using Interval = boost::icl::discrete_interval<unsigned int>;
+  
+  boost::icl::interval_set<unsigned int> full_domain;  
+  full_domain += Interval::right_open(0, DOMAIN_MAX);
+
+  boost::icl::interval_set<unsigned int> working_domain(full_domain);
+
+  for(unsigned int i=0; i<3; ++i)
+    working_domain -= Interval::right_open(i*15, i*15 + 7);
+
+  boost::icl::interval_set<unsigned int> inverted_working_domain = boost::icl::flip(full_domain, working_domain);
+  
+  unsigned int inverted_domain_discrete_cardinality = 0;
+  for(auto& range : inverted_working_domain)
+    inverted_domain_discrete_cardinality += boost::icl::cardinality(range);
+  
+  assert(inverted_domain_discrete_cardinality == 21);
+
+  return 0;
+}
\ No newline at end of file
