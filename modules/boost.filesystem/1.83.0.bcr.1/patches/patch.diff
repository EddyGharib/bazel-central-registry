diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..d6d91a1
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,31 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "filesystem",
+    defines = [
+        "BOOST_FILESYSTEM_NO_CXX20_ATOMIC_REF",
+    ] + select({
+        "@platforms//os:linux": [
+            "BOOST_FILESYSTEM_HAS_POSIX_AT_APIS",
+        ],
+        "//conditions:default": [],
+    }),
+    deps = [
+        "@boost.assert//:assert",
+        "@boost.atomic//:atomic",
+        "@boost.config//:config",
+        "@boost.container_hash//:container_hash",
+        "@boost.core//:core",
+        "@boost.detail//:detail",
+        "@boost.io//:io",
+        "@boost.iterator//:iterator",
+        "@boost.predef//:predef",
+        "@boost.smart_ptr//:smart_ptr",
+        "@boost.system//:system",
+        "@boost.throw_exception//:throw_exception",
+        "@boost.type_traits//:type_traits",
+        "@boost.winapi//:winapi",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..c5df180
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,31 @@
+"""
+Hey there! Most of this file is auto-generated by the tool at https://github.com/dynacondev/boost.rules.tools
+Go check it out to get started!
+Btw, The # Test Only section is manually edited!
+"""
+
+module(
+    name = "boost.filesystem",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+
+# bazel_dep(name = "boost.cstdint", version = "1.83.0.bcr.1")
+# bazel_dep(name = "boost.scoped_array", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.assert", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.atomic", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.container_hash", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.detail", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.io", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.iterator", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.predef", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.smart_ptr", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.system", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.winapi", version = "1.83.0.bcr.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..fc1b944
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.filesystem//:filesystem",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "filesystem_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/filesystem_test.cc b/bazel_test/filesystem_test.cc
new file mode 100644
index 0000000..30f4a9e
--- /dev/null
+++ b/bazel_test/filesystem_test.cc
@@ -0,0 +1,9 @@
+#include <boost/filesystem.hpp>
+
+int main(int argc, char* argv[])
+{
+  boost::filesystem::path p;
+  p /= "comp1";
+  p /= "comp2";
+  return p.compare(std::string{"comp1/comp2"});
+}
