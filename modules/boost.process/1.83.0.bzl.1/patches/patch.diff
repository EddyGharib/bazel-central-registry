diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..03be10e
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,24 @@
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "process",
+    deps = [
+        "@boost.algorithm//:algorithm",
+        "@boost.asio//:asio",
+        "@boost.config//:config",
+        "@boost.core//:core",
+        "@boost.filesystem//:filesystem",
+        "@boost.fusion//:fusion",
+        "@boost.io//:io",
+        "@boost.iterator//:iterator",
+        "@boost.move//:move",
+        "@boost.optional//:optional",
+        "@boost.system//:system",
+        "@boost.throw_exception//:throw_exception",
+        "@boost.tokenizer//:tokenizer",
+        "@boost.type_index//:type_index",
+        "@boost.type_traits//:type_traits",
+        "@boost.utility//:utility",
+        "@boost.winapi//:winapi",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..76968a8
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,25 @@
+module(
+    name = "boost.process",
+    version = "1.83.0.bzl.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.algorithm", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.asio", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.filesystem", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.fusion", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.io", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.iterator", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.move", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.optional", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.system", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.tokenizer", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.type_index", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.utility", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.winapi", version = "1.83.0.bzl.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..f5198f5
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.process//:process",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "process_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/process_test.cc b/bazel_test/process_test.cc
new file mode 100644
index 0000000..9cfe22b
--- /dev/null
+++ b/bazel_test/process_test.cc
@@ -0,0 +1,28 @@
+// work-around issue in Boost 1.77
+// https://github.com/boostorg/process/pull/215
+#include <algorithm>
+
+#include <boost/process.hpp>
+
+int main() 
+{
+    using namespace boost::process;
+
+    ipstream pipe_stream;
+    child c("echo hi", std_out > pipe_stream);
+
+    std::string line;
+    std::string all;
+
+    while (pipe_stream && std::getline(pipe_stream, line) && !line.empty())
+        all += line + '\n';
+
+    c.wait();
+
+    auto iter = all.find("hi");
+    if (iter != std::string::npos) {
+        return 0;
+    } else {
+        return -1;
+    }
+}
