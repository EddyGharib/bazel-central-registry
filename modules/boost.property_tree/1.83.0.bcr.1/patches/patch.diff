diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..755cd1b
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,24 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "property_tree",
+    deps = [
+        "@boost.any//:any",
+        "@boost.assert//:assert",
+        "@boost.bind//:bind",
+        "@boost.config//:config",
+        "@boost.core//:core",
+        "@boost.format//:format",
+        "@boost.iterator//:iterator",
+        "@boost.mpl//:mpl",
+        "@boost.multi_index//:multi_index",
+        "@boost.optional//:optional",
+        "@boost.range//:range",
+        "@boost.serialization//:serialization",
+        "@boost.static_assert//:static_assert",
+        "@boost.throw_exception//:throw_exception",
+        "@boost.type_traits//:type_traits",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..f26c4f5
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,29 @@
+"""
+Hey there! Most of this file is auto-generated by the tool at https://github.com/dynacondev/boost.rules.tools
+Go check it out to get started!
+Btw, The # Test Only section is manually edited!
+"""
+
+module(
+    name = "boost.property_tree",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.any", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.assert", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.bind", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.format", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.iterator", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.mpl", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.multi_index", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.optional", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.range", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.serialization", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.static_assert", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bcr.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..7875d36
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.property_tree//:property_tree",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "property_tree_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/property_tree_test.cc b/bazel_test/property_tree_test.cc
new file mode 100644
index 0000000..758d1df
--- /dev/null
+++ b/bazel_test/property_tree_test.cc
@@ -0,0 +1,14 @@
+#include <sstream>
+#include <boost/property_tree/ptree.hpp>
+#include <boost/property_tree/json_parser.hpp>
+
+using namespace boost::property_tree;
+
+int main()
+{
+  ptree pt;
+  std::stringstream ss;
+  pt.put("k", "v");
+  json_parser::write_json(ss, pt, false);
+  return ss.str() != "{\"k\":\"v\"}\n";
+}
