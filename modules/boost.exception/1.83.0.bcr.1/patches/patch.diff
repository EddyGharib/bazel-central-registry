diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..829570a
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,14 @@
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "exception",
+    deps = [
+        "@boost.assert//:assert",
+        "@boost.config//:config",
+        "@boost.core//:core",
+        "@boost.smart_ptr//:smart_ptr",
+        "@boost.throw_exception//:throw_exception",
+        "@boost.tuple//:tuple",
+        "@boost.type_traits//:type_traits",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..ad2e2d4
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,15 @@
+module(
+    name = "boost.exception",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.assert", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.smart_ptr", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.tuple", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bcr.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..719bcc4
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.exception//:exception",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "exception_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/exception_test.cc b/bazel_test/exception_test.cc
new file mode 100644
index 0000000..314130a
--- /dev/null
+++ b/bazel_test/exception_test.cc
@@ -0,0 +1,14 @@
+#include <boost/exception/all.hpp>
+#include <stdexcept>
+#include <iostream>
+
+int main(int, char *[])
+{
+  try {
+    BOOST_THROW_EXCEPTION(std::runtime_error("success"));
+  } catch (std::exception &e) {
+    std::cout << boost::diagnostic_information(e) << '\n';
+    return 0;
+  }
+  return 1;
+}
