diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..d9ca9c1
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,38 @@
+module(
+    name = "boost.geometry",
+    version = "1.83.0.bzl.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.algorithm", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.any", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.array", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.assert", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.concept_check", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.container", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.function_types", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.fusion", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.integer", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.iterator", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.lexical_cast", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.math", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.mpl", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.multiprecision", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.numeric.conversion", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.polygon", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.qvm", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.range", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.rational", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.serialization", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.static_assert", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.thread", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.tokenizer", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.tuple", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.variant", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.variant2", version = "1.83.0.bzl.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..72ba753
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.geometry//:geometry",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "geometry_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/geometry_test.cc b/bazel_test/geometry_test.cc
new file mode 100644
index 0000000..a32e2a0
--- /dev/null
+++ b/bazel_test/geometry_test.cc
@@ -0,0 +1,26 @@
+#include <vector>
+
+#include <boost/geometry.hpp>
+#include <boost/geometry/geometries/point.hpp>
+#include <boost/geometry/geometries/box.hpp>
+#include <boost/geometry/index/rtree.hpp>
+
+
+namespace bg = boost::geometry;
+namespace bgi = boost::geometry::index;
+
+int
+main() {
+  typedef bg::model::point<float, 2, bg::cs::cartesian> point;
+  typedef bg::model::box<point> box;
+  typedef std::pair<box, unsigned> value;
+  bgi::rtree< value, bgi::quadratic<16> > rtree;
+  for (unsigned i = 0 ; i < 10 ; ++i) {
+    box b(point(i + 0.0f, i + 0.0f), point(i + 0.5f, i + 0.5f));
+    rtree.insert(std::make_pair(b, i));
+  }
+  box query_box(point(0, 0), point(5, 5));
+  std::vector<value> result_s;
+  rtree.query(bgi::intersects(query_box), std::back_inserter(result_s));
+  return result_s.size() == 5;
+}
