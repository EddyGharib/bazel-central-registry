diff --git BUILD BUILD
new file mode 100644
index 00000000..deba0810
--- /dev/null
+++ BUILD
@@ -0,0 +1,39 @@
+cc_library(
+    name = "aws-c-common",
+    srcs = glob([
+        "source/*.c",
+        "source/aws/common/posix/*.c",
+        "source/posix/*.c",
+        "source/linux/*.c",
+        "source/arch/generic/*.c",
+        "source/external/*.c",
+        "source/external/libcbor/*.c",
+        "source/external/libcbor/cbor/*.c",
+        "source/external/libcbor/cbor/internal/*.c",
+        "include/aws/common/private/*.c",
+    ]),
+    hdrs = glob([
+        "include/aws/common/*.h",
+        "include/aws/common/*.inl",
+        "include/aws/common/external/*.h",
+        "include/aws/common/private/*.h",
+        "include/aws/common/private/*.inl",
+        "include/aws/common/posix/*.inl",
+        "source/external/*.h",
+        "source/external/libcbor/*.h",
+        "source/external/libcbor/cbor/*.h",
+        "source/external/libcbor/cbor/internal/*.h",
+    ]),
+    includes = [
+        "include",
+        "source/external",
+        "source/external/libcbor",
+        "source/external/libcbor/cbor",
+        "source/external/libcbor/cbor/internal",
+    ],
+    defines = {
+        "AWS_AFFINITY_METHOD": "AWS_AFFINITY_METHOD_PTHREAD",
+        "INTEL_NO_ITTNOTIFY_API": "ON",
+    },
+    visibility = ["//visibility:public"],
+)
diff --git bin/system_info/BUILD bin/system_info/BUILD
new file mode 100644
index 00000000..8cc61821
--- /dev/null
+++ bin/system_info/BUILD
@@ -0,0 +1,5 @@
+cc_binary(
+    name = "system_info",
+    srcs = ["print_system_info.c"],
+    deps = ["//:aws-c-common"],
+)
diff --git include/aws/common/config.h include/aws/common/config.h
new file mode 100644
index 00000000..45c522bb
--- /dev/null
+++ include/aws/common/config.h
@@ -0,0 +1,33 @@
+#ifndef AWS_COMMON_CONFIG_H
+#define AWS_COMMON_CONFIG_H
+
+/**
+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ * SPDX-License-Identifier: Apache-2.0.
+ */
+
+/*
+ * This header exposes compiler feature test results determined during cmake
+ * configure time to inline function implementations. The macros defined here
+ * should be considered to be an implementation detail, and can change at any
+ * time.
+ */
+#define AWS_HAVE_GCC_OVERFLOW_MATH_EXTENSIONS
+#define AWS_HAVE_GCC_INLINE_ASM
+/* #undef AWS_HAVE_MSVC_INTRINSICS_X64 */
+#define AWS_HAVE_POSIX_LARGE_FILE_SUPPORT
+#define AWS_HAVE_EXECINFO
+/* #undef AWS_HAVE_WINAPI_DESKTOP */
+#define AWS_HAVE_LINUX_IF_LINK_H
+#define AWS_HAVE_AVX2_INTRINSICS
+#define AWS_HAVE_AVX512_INTRINSICS
+#define AWS_HAVE_MM256_EXTRACT_EPI64
+#define AWS_HAVE_CLMUL
+/* #undef AWS_HAVE_ARM32_CRC */
+/* #undef AWS_HAVE_ARMv8_1 */
+/* #undef AWS_ARCH_ARM64 */
+#define AWS_ARCH_INTEL
+#define AWS_ARCH_INTEL_X64
+#define AWS_USE_CPU_EXTENSIONS
+
+#endif
