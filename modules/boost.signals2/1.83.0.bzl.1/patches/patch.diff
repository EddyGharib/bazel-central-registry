diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..22cff8b
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,22 @@
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "signals2",
+    deps = [
+        "@boost.assert//:assert",
+        "@boost.bind//:bind",
+        "@boost.config//:config",
+        "@boost.core//:core",
+        "@boost.function//:function",
+        "@boost.iterator//:iterator",
+        "@boost.mpl//:mpl",
+        "@boost.optional//:optional",
+        "@boost.parameter//:parameter",
+        "@boost.preprocessor//:preprocessor",
+        "@boost.smart_ptr//:smart_ptr",
+        "@boost.throw_exception//:throw_exception",
+        "@boost.tuple//:tuple",
+        "@boost.type_traits//:type_traits",
+        "@boost.variant//:variant",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..ca60653
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,23 @@
+module(
+    name = "boost.signals2",
+    version = "1.83.0.bzl.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+bazel_dep(name = "boost.assert", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.bind", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.config", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.core", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.function", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.iterator", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.mpl", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.optional", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.parameter", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.preprocessor", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.smart_ptr", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.throw_exception", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.tuple", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.type_traits", version = "1.83.0.bzl.1")
+bazel_dep(name = "boost.variant", version = "1.83.0.bzl.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/bazel_test/BUILD.bazel b/bazel_test/BUILD.bazel
new file mode 100644
index 0000000..dda1ffb
--- /dev/null
+++ b/bazel_test/BUILD.bazel
@@ -0,0 +1,16 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost.signals2//:signals2",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        file_extensions = ".cc",
+        names = [
+            "signals2_test",
+        ],
+        deps = DEPS,
+    ),
+)
diff --git a/bazel_test/signals2_test.cc b/bazel_test/signals2_test.cc
new file mode 100644
index 0000000..32c9e3a
--- /dev/null
+++ b/bazel_test/signals2_test.cc
@@ -0,0 +1,31 @@
+#include <boost/signals2.hpp>
+
+class FlagSetter
+{
+ public:
+  FlagSetter(bool *flag) : flag(flag) {}
+
+  void operator()()
+  {
+    *flag = true;
+  }
+
+  bool *flag;
+};
+
+int main()
+{
+  bool called = false;
+
+  boost::signals2::signal<void ()> sig;
+  FlagSetter fs (&called);
+  sig.connect(fs);
+
+  sig();
+
+  if (!called) {
+    return 1;
+  }
+
+  return 0;
+}
